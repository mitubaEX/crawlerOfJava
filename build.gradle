/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

apply plugin: 'eclipse'
sourceCompatibility = targetCompatibility = '1.8'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenLocal()
    mavenCentral()
}

dependencies {
    // The production code uses Guava
    // compile 'com.google.guava:guava:20.0'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'

    compile 'com.github.pochi:pochi-runner:1.0-SNAPSHOT'

    // https://mvnrepository.com/artifact/org.apache.solr/solr-solrj
    compile group: 'org.apache.solr', name: 'solr-solrj', version: '6.5.1'


    // https://mvnrepository.com/artifact/edu.uci.ics/crawler4j
    // compile group: 'edu.uci.ics', name: 'crawler4j', version: '4.3'

    // // https://mvnrepository.com/artifact/org.jsoup/jsoup
    // compile group: 'org.jsoup', name: 'jsoup', version: '1.7.2'
}

// Define the main class for the application
mainClassName = 'com.github.mituba.crawler.Main'


jar {
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    manifest {
        attributes("Main-Class": mainClassName)
    }
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}
